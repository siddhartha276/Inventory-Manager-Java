/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.*;

import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.time.LocalDate;
import java.time.YearMonth;
public class Sales extends javax.swing.JFrame {
    private static java.sql.Connection con;
        

    /**
     * Creates new form Sales
     */
    public Sales() {
        initComponents();
        

        ThisWeek.setText("This Week");
        ThisWeek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThisWeekActionPerformed(evt);
            }
        });

        ThisMonth.setText("This Month");
        ThisMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThisMonthActionPerformed(evt);
            }
        });

        Yearly.setText("Yearly");
        Yearly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearlyActionPerformed(evt);
            }
        });

        Today.setText("Today");
        Today.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TodayActionPerformed(evt);
            }
        });

        TotalAmount.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Total = new javax.swing.JButton();
        ThisWeek = new javax.swing.JButton();
        ThisMonth = new javax.swing.JButton();
        Yearly = new javax.swing.JButton();
        Today = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TotalAmount = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Bill Number", "Phone Number", "Total Amount", "Payment Mode"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 61, 1155, 408));

        Total.setText("TOTAL");
        Total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalActionPerformed(evt);
            }
        });
        getContentPane().add(Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 523, 150, 40));

        ThisWeek.setText("THIS WEEK");
        ThisWeek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThisWeekActionPerformed(evt);
            }
        });
        getContentPane().add(ThisWeek, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 523, 140, 40));

        ThisMonth.setText("THIS MONTH");
        ThisMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThisMonthActionPerformed(evt);
            }
        });
        getContentPane().add(ThisMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(675, 523, 140, 40));

        Yearly.setText("YEARLY");
        Yearly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearlyActionPerformed(evt);
            }
        });
        getContentPane().add(Yearly, new org.netbeans.lib.awtextra.AbsoluteConstraints(1083, 523, 140, 40));

        Today.setText("TODAY");
        Today.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TodayActionPerformed(evt);
            }
        });
        getContentPane().add(Today, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 523, 140, 40));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2 ", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", " " }));
        jComboBox1.setOpaque(true);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(885, 523, 130, 40));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("TOTAL SALES");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 620, 143, 59));

        TotalAmount.setColumns(20);
        TotalAmount.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        TotalAmount.setRows(5);
        jScrollPane2.setViewportView(TotalAmount);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 620, 240, 60));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\santo\\Documents\\NetBeansProjects\\BillGenerator\\src\\BG.png")); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/petsglorious", "(database username)", "(database password");
            String sql = "SELECT * FROM bill";
            
             try (Statement st = con.createStatement();
                 ResultSet rs = st.executeQuery(sql)) {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                
                                while (rs.next()) {
                    String billNumber = rs.getString("Bill_ID");
                    String paymentMode = rs.getString("PaymentMode");
                    double totalAmount = rs.getDouble("TotalAmount");
                    String phoneNumber = rs.getString("PhoneNumber");
                    Date date = rs.getDate("bill_date");

                    // Add a row to the table
                    Vector<Object> row = new Vector<>();
                    row.add(date);
                    row.add(billNumber);
                    row.add(phoneNumber);
                    row.add(totalAmount);
                    row.add(paymentMode);

                    model.addRow(row);
                }
                                }
        } catch (ClassNotFoundException | java.sql.SQLException ex) {
            Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TotalActionPerformed

    private void ThisWeekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThisWeekActionPerformed
        // TODO add your handling code here:
        fetchDataAndDisplayForTimePeriod("This Week");
    }//GEN-LAST:event_ThisWeekActionPerformed

    private void ThisMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThisMonthActionPerformed
        // TODO add your handling code here:
        fetchDataAndDisplayForTimePeriod("This Month");
    }//GEN-LAST:event_ThisMonthActionPerformed

    private void YearlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearlyActionPerformed
        // TODO add your handling code here:
        fetchDataAndDisplayForTimePeriod("Yearly");
    }//GEN-LAST:event_YearlyActionPerformed

    private void TodayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TodayActionPerformed
        // TODO add your handling code here:
        fetchDataAndDisplayForTimePeriod("Today");
    }//GEN-LAST:event_TodayActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        int userSelectedMonth = Integer.parseInt((String) jComboBox1.getSelectedItem());
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/petsglorious", "(database username)", "(database password"));
            String sqlQuery = "SELECT SUM(totalAmount) AS totalamount FROM bill WHERE MONTH(bill_date) = ?";
            PreparedStatement preparedStatement = con.prepareStatement(sqlQuery);
        
            preparedStatement.setInt(1, userSelectedMonth);
            
            // Execute the query
            ResultSet resultSet = preparedStatement.executeQuery();

            // Process the result
            if (resultSet.next()) {
                double totalAmount = resultSet.getDouble("totalamount");
                TotalAmount.setText(String.valueOf(totalAmount));
                System.out.println("Total amount made in month " + userSelectedMonth + ": " + totalAmount);
            } else {
                System.out.println("No data found for the specified month.");
            }
        }   
         catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sales().setVisible(true);
            }
        });
    }
    private void fetchDataAndDisplay() {
        fetchDataAndDisplayForTimePeriod("All");
    }

    private void fetchDataAndDisplayForTimePeriod(String timePeriod) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/petsglorious", "(database username)", "(database password"));

            String sql;
            switch (timePeriod) {
                case "This Week":
                    sql = "SELECT * FROM bill WHERE bill_date BETWEEN CURDATE() - INTERVAL 6 DAY AND CURDATE()";
                    break;
                case "This Month":
                    sql = "SELECT * FROM bill WHERE MONTH(bill_date) = MONTH(CURDATE())";
                    break;
                case "Yearly":
                    sql = "SELECT * FROM bill WHERE YEAR(bill_date) = YEAR(CURDATE())";
                    break;
                case "Today":
                    sql = "SELECT * FROM bill WHERE DATE(bill_date) = CURDATE()";
                    break;
                default:
                    sql = "SELECT * FROM bill";
                    break;
            }
            double totalAmount = 0;
            try (Statement st = con.createStatement();
                 ResultSet rs = st.executeQuery(sql)) {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0); // Clear existing data in the table

                

                while (rs.next()) {
                    String billNumber = rs.getString("Bill_ID");
                    String paymentMode = rs.getString("PaymentMode");
                    double amount = rs.getDouble("TotalAmount");
                    String phoneNumber = rs.getString("PhoneNumber");
                    Date date = rs.getDate("bill_date");

                    // Add a row to the table
                    Vector<Object> row = new Vector<>();
                    row.add(date);
                    row.add(billNumber);
                    row.add(phoneNumber);
                    row.add(amount);
                    row.add(paymentMode);

                    model.addRow(row);

                    // Accumulate total amount
                    totalAmount += amount;
                }

                // Display the total amount in the JTextArea
                TotalAmount.setText(String.valueOf(totalAmount));
            }
   
        } catch (Exception e) {
    e.printStackTrace();
}

    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ThisMonth;
    private javax.swing.JButton ThisWeek;
    private javax.swing.JButton Today;
    private javax.swing.JButton Total;
    private javax.swing.JTextArea TotalAmount;
    private javax.swing.JButton Yearly;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

